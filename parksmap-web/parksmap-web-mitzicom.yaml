apiVersion: v1
kind: Template
metadata:
  name: parksmap-web-mitzicom
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    generation: "1"
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: "1"
    revisionHistoryLimit: "10"
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: "21600"
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - image: ' '
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: "3"
            httpGet:
              path: /ws/backends/list/
              port: 8080
              scheme: HTTP
            periodSeconds: "10"
            successThreshold: "1"
            timeoutSeconds: "120"
          name: ${APPLICATION_NAME}
          readinessProbe:
            failureThreshold: "3"
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            periodSeconds: "10"
            successThreshold: "1"
            timeoutSeconds: "120"
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: "30"
    test: false
    triggers:
    - imageChangeParams:
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:${IMAGE_TAG}
          namespace: mitzicom-dev
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: "100"
    wildcardPolicy: None
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    labels:
      app: ${APPLICATION_NAME}
      build: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    failedBuildsHistoryLimit: "5"
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.2
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: "5"
parameters:
- description: The name for the application
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: "parksmap-web"
- description:  the image tag for deployment (latest, TestReady, ProdReady).
  displayName: Image tag
  name: IMAGE_TAG
  required: true
  value: "latest"