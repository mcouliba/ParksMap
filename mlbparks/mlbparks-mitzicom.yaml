apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: mlbparks-mitzicom
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: mlbparks
    name: mlbparks
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: mlbparks
      deploymentconfig: mlbparks
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        post:
          execNewPod:
            command:
            - curl
            - http://mlbparks:8080/ws/data/load
            containerName: mlbparks
          failurePolicy: Abort
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: mlbparks
          deploymentconfig: mlbparks
      spec:
        containers:
        - env:
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                key: db.host
                name: mlbparks-config
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: db.port
                name: mlbparks-config
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                key: db.username
                name: mlbparks-config
          - name: DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: db.password
                name: mlbparks-config
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                key: db.name
                name: mlbparks-config
          image: docker-registry.default.svc:5000/mitzicom-dev/mlbparks@sha256:d39f3fac653ae3362cd6c5855eece781d2e6f3beebca70c15bb6f5252e908714
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/info
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 120
          name: mlbparks
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 120
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        containerNames:
        - mlbparks
        from:
          kind: ImageStreamTag
          name: mlbparks:latest
          namespace: mitzicom-dev
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: null
    generation: 1
    labels:
      app: mlbparks
      template: mongodb-persistent-template
    name: mlbparks-mongodb
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: mlbparks-mongodb
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: mlbparks
          name: mlbparks-mongodb
      spec:
        containers:
        - env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: mlbparks-mongodb
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: mlbparks-mongodb
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: mlbparks-mongodb
          - name: MONGODB_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: mlbparks-mongodb
          image: registry.access.redhat.com/rhscl/mongodb-32-rhel7@sha256:2c44d3b3ac7945d58d92f4c53adf32942256883b75799a617da550a602a2e948
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mlbparks-mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mlbparks-mongodb-data
          persistentVolumeClaim:
            claimName: mlbparks-mongodb
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:3.2
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: mlbparks
    name: mlbparks
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: mlbparks
      deploymentconfig: mlbparks
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-uri: mongodb://{.spec.clusterIP}:{.spec.ports[?(.name=="mongo")].port}
    creationTimestamp: null
    labels:
      app: mlbparks
      template: mongodb-persistent-template
    name: mlbparks-mongodb
  spec:
    ports:
    - name: mongo
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: mlbparks-mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  data:
    db.host: mlbparks-mongodb.mitzicom-dev.svc
    db.name: mlbparks
    db.password: mongodb
    db.port: "27017"
    db.username: mongodb
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    labels:
      app: mlbparks
    name: mlbparks-config
- apiVersion: v1
  data:
    database-admin-password: bW9uZ29kYg==
    database-name: bWxicGFya3M=
    database-password: bW9uZ29kYg==
    database-user: bW9uZ29kYg==
  kind: Secret
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-admin_password: '{.data[''database-admin-password'']}'
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
      template.openshift.io/expose-password: '{.data[''database-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
    creationTimestamp: null
    labels:
      app: mlbparks
      template: mongodb-persistent-template
    name: mlbparks-mongodb
  type: Opaque
