// Run this node on a Maven Slave
// Maven Slaves have JDK and Maven already installed
node('maven') {
    def mvnCmd = "mvn -s ../nexus_openshift_settings.xml"

    stage('Checkout Source') {
        // Get Source Code from SCM (Git) as configured in the Jenkins Project
        // Next line for inline script, "checkout scm" for Jenkinsfile from Gogs
        checkout scm
    }
  
    dir('mlbparks') {
        // The following variables need to be defined at the top level and not inside
        // the scope of a stage - otherwise they would not be accessible from other stages.
        // Extract version and other properties from the pom.xml
        def groupId    = getGroupIdFromPom("pom.xml")
        def artifactId = getArtifactIdFromPom("pom.xml")
        def version    = getVersionFromPom("pom.xml")
        
        // Using Maven build the war file
        // Do not run tests in this step
        stage('mlbparks - Build war') {
            sh "${mvnCmd} clean install -DskipTests=true"
        }
        
        // Using Maven run the unit tests
        stage('mlbparks - Unit Tests') {
            sh "${mvnCmd} test"
        }
        
        // Using Maven call SonarQube for Code Analysis
        stage('mlbparks - Code Analysis') {
           // sh "${mvnCmd} sonar:sonar -Dsonar.host.url=http://sonarqube-sonarqube.apps.46.4.112.21.xip.io/"
        }
        
        stage('mlbparks - Publish to Nexus') {
           // sh "${mvnCmd} deploy -DskipTests=true -DaltDeploymentRepository=nexus::default::http://nexus3-nexus.apps.46.4.112.21.xip.io/repository/releases"
        }
     
        // Build the OpenShift Image in OpenShift. 
        stage('mlbparks - Build OpenShift Image') {
            sh "mkdir ./builddir"
            sh "cp ./target/ROOT.war ./builddir/ROOT.war"
            sh "oc project mitzicom-dev"
            sh "oc start-build mlbparks --follow --from-dir=./builddir -n mitzicom-dev"
            openshiftTag alias: 'false', apiURL: '', authToken: '', destStream: 'mlbparks', destTag: "TestReady", destinationAuthToken: '', destinationNamespace: 'mitzicom-dev', namespace: 'mitzicom-dev', srcStream: 'mlbparks', srcTag: 'latest', verbose: 'false'
        }
    }

    // Deployment into Test
    // -------------------------------------

    // Deploy the built image to the Test Environment.
    stage('mlbparks - Deploy to Test') {
    	openshiftDeploy apiURL: '', authToken: '', depCfg: 'mlbparks', namespace: 'mitzicom-test', verbose: 'false', waitTime: '', waitUnit: 'sec'
    }

    stage('mlbparks - Integration Test') {
		def expectedResult1 = '{"id":"mlbparks","displayName":"MLB Parks","center":{"latitude":"39.82","longitude":"-98.57"},"zoom":5}'
		def currentResult1 = sh returnStdout: true, script: 'curl http://mlbparks-mitzicom-test.apps.46.4.112.21.xip.io/ws/info'
		def expectedResult2 = '[{"position":{"latitude":"33.444799","longitude":"-112.066662"},"latitude":"33.444799","longitude":"-112.066662","id":"5a84658260d95c0185c1acf3","name":"Diamondbacks"},{"position":{"latitude":"33.734708","longitude":"-84.38839"},"latitude":"33.734708","longitude":"-84.38839","id":"5a84658260d95c0185c1acf4","name":"Braves"},{"position":{"latitude":"39.284072","longitude":"-76.620214"},"latitude":"39.284072","longitude":"-76.620214","id":"5a84658260d95c0185c1acf5","name":"Orioles"},{"position":{"latitude":"42.346251","longitude":"-71.09817"},"latitude":"42.346251","longitude":"-71.09817","id":"5a84658260d95c0185c1acf6","name":"Red Sox"},{"position":{"latitude":"41.829347","longitude":"-87.633788"},"latitude":"41.829347","longitude":"-87.633788","id":"5a84658260d95c0185c1acf7","name":"White Sox"},{"position":{"latitude":"41.947304","longitude":"-87.656447"},"latitude":"41.947304","longitude":"-87.656447","id":"5a84658260d95c0185c1acf8","name":"Cubs"},{"position":{"latitude":"41.495966","longitude":"-81.685236"},"latitude":"41.495966","longitude":"-81.685236","id":"5a84658260d95c0185c1acf9","name":"Indians"},{"position":{"latitude":"39.097437","longitude":"-84.506965"},"latitude":"39.097437","longitude":"-84.506965","id":"5a84658260d95c0185c1acfa","name":"Reds"},{"position":{"latitude":"42.338753","longitude":"-83.048487"},"latitude":"42.338753","longitude":"-83.048487","id":"5a84658260d95c0185c1acfb","name":"Tigers"},{"position":{"latitude":"39.756436","longitude":"-104.994281"},"latitude":"39.756436","longitude":"-104.994281","id":"5a84658260d95c0185c1acfc","name":"Rockies"},{"position":{"latitude":"29.756816","longitude":"-95.357294"},"latitude":"29.756816","longitude":"-95.357294","id":"5a84658260d95c0185c1acfd","name":"Astros"},{"position":{"latitude":"34.07322","longitude":"-118.240974"},"latitude":"34.07322","longitude":"-118.240974","id":"5a84658260d95c0185c1acfe","name":"Dodgers"},{"position":{"latitude":"39.051019","longitude":"-94.480619"},"latitude":"39.051019","longitude":"-94.480619","id":"5a84658260d95c0185c1acff","name":"Royals"},{"position":{"latitude":"25.778142","longitude":"-80.22148"},"latitude":"25.778142","longitude":"-80.22148","id":"5a84658260d95c0185c1ad00","name":"Marlins"},{"position":{"latitude":"33.80003","longitude":"-117.883043"},"latitude":"33.80003","longitude":"-117.883043","id":"5a84658260d95c0185c1ad01","name":"Angels"},{"position":{"latitude":"43.028758","longitude":"-87.972043"},"latitude":"43.028758","longitude":"-87.972043","id":"5a84658260d95c0185c1ad02","name":"Brewers"},{"position":{"latitude":"44.981739","longitude":"-93.278282"},"latitude":"44.981739","longitude":"-93.278282","id":"5a84658260d95c0185c1ad03","name":"Twins"},{"position":{"latitude":"40.756477","longitude":"-73.846399"},"latitude":"40.756477","longitude":"-73.846399","id":"5a84658260d95c0185c1ad04","name":"Mets"},{"position":{"latitude":"40.829234","longitude":"-73.92842"},"latitude":"40.829234","longitude":"-73.92842","id":"5a84658260d95c0185c1ad05","name":"Yankees"},{"position":{"latitude":"39.905654","longitude":"-75.166483"},"latitude":"39.905654","longitude":"-75.166483","id":"5a84658260d95c0185c1ad06","name":"Phillies"},{"position":{"latitude":"37.751554","longitude":"-122.201571"},"latitude":"37.751554","longitude":"-122.201571","id":"5a84658260d95c0185c1ad07","name":"Athletics"},{"position":{"latitude":"40.446947","longitude":"-80.005666"},"latitude":"40.446947","longitude":"-80.005666","id":"5a84658260d95c0185c1ad08","name":"Pirates"},{"position":{"latitude":"47.591231","longitude":"-122.332635"},"latitude":"47.591231","longitude":"-122.332635","id":"5a84658260d95c0185c1ad09","name":"Mariners"},{"position":{"latitude":"32.705664","longitude":"-117.155617"},"latitude":"32.705664","longitude":"-117.155617","id":"5a84658260d95c0185c1ad0a","name":"Padres"},{"position":{"latitude":"27.768507","longitude":"-82.65152"},"latitude":"27.768507","longitude":"-82.65152","id":"5a84658260d95c0185c1ad0b","name":"Rays"},{"position":{"latitude":"37.778143","longitude":"-122.390871"},"latitude":"37.778143","longitude":"-122.390871","id":"5a84658260d95c0185c1ad0c","name":"Giants"},{"position":{"latitude":"32.749833","longitude":"-97.081266"},"latitude":"32.749833","longitude":"-97.081266","id":"5a84658260d95c0185c1ad0d","name":"Rangers"},{"position":{"latitude":"38.623978","longitude":"-90.19405"},"latitude":"38.623978","longitude":"-90.19405","id":"5a84658260d95c0185c1ad0e","name":"Cardinals"},{"position":{"latitude":"43.642349","longitude":"-79.390611"},"latitude":"43.642349","longitude":"-79.390611","id":"5a84658260d95c0185c1ad0f","name":"Blue Jays"},{"position":{"latitude":"38.873068","longitude":"-77.007283"},"latitude":"38.873068","longitude":"-77.007283","id":"5a84658260d95c0185c1ad10","name":"Nationals"}]'
		
		def currentResult2 = sh returnStdout: true, script: 'curl http://mlbparks-mitzicom-test.apps.46.4.112.21.xip.io/ws/data/all'

		sh "[ expectedResult1 == currentResult1 -a expectedResult2 == currentResult2 ]"
    	
		openshiftTag alias: 'false', apiURL: '', authToken: '', destStream: 'mlbparks', destTag: "ProdReady", destinationAuthToken: '', destinationNamespace: 'mitzicom-dev', namespace: 'mitzicom-dev', srcStream: 'mlbparks', srcTag: "TestReady", verbose: 'false'
    }

    // Blue/Green Deployment into Production
    // -------------------------------------
    // Next two stages could be one.
    // Make sure to deploy the right version. If green is active then deploy blue, and vice versa.
    // You will need to figure out which application is active and set the target to the other.
    def deployToColor = "mlbparks-blue"

    stage('mlbparks - Prep Production Deployment') {
    	sh "oc project mitzicom-prod"
    	def currentColor = sh returnStdout: true, script: 'oc get route mlbparks -o jsonpath=\'{ .spec.to.name }\' -n mitzicom-prod'
    	if (currentColor == "mlbparks-blue") {
    		deployToColor = "mlbparks-green"
    	}
    }

    // Deploy the ProdReady image.
    stage('mlbparks - Deploy new Version into ' + deployToColor) {
    	openshiftDeploy apiURL: '', authToken: '', depCfg: deployToColor, namespace: 'mitzicom-prod', verbose: 'false', waitTime: '', waitUnit: 'sec'
    }

    // Once approved (input step) switch production over to the new version.
    stage('mlbparks - Switch over to new Version') {
    	input "Switch Production?"
    	sh "oc patch route/mlbparks -p '{\"spec\":{\"to\":{\"name\":\"$deployToColor\"}}}' -n mitzicom-prod"
    }
}

// Convenience Functions to read variables from the pom.xml
// Do not change anything below this line.
def getVersionFromPom(pom) {
  def matcher = readFile(pom) =~ '<version>(.+)</version>'
  matcher ? matcher[0][1] : null
}
def getGroupIdFromPom(pom) {
  def matcher = readFile(pom) =~ '<groupId>(.+)</groupId>'
  matcher ? matcher[0][1] : null
}
def getArtifactIdFromPom(pom) {
  def matcher = readFile(pom) =~ '<artifactId>(.+)</artifactId>'
  matcher ? matcher[0][1] : null
}